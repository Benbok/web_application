from django.core.management.base import BaseCommand, CommandError
from django.contrib.auth.models import User
from django.db import transaction
from document_signatures.models import SignatureWorkflow, DocumentSignature


class Command(BaseCommand):
    help = '–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–¥–ø–∏—Å–µ–π —Å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º'

    def add_arguments(self, parser):
        parser.add_argument(
            'workflow_id',
            type=int,
            help='ID —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è'
        )
        parser.add_argument(
            '--force',
            action='store_true',
            help='–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'
        )
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–¢–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ, –Ω–µ —É–¥–∞–ª—è—Ç—å'
        )

    def handle(self, *args, **options):
        workflow_id = options['workflow_id']
        force = options['force']
        dry_run = options['dry_run']

        try:
            workflow = SignatureWorkflow.objects.get(pk=workflow_id)
        except SignatureWorkflow.DoesNotExist:
            raise CommandError(f'–†–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å —Å ID {workflow_id} –Ω–µ –Ω–∞–π–¥–µ–Ω')

        # –ü–æ–ª—É—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏
        related_signatures = DocumentSignature.objects.filter(workflow=workflow)
        signature_count = related_signatures.count()

        self.stdout.write(
            self.style.SUCCESS(f'–†–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å: {workflow.name} (ID: {workflow.id})')
        )
        self.stdout.write(f'–¢–∏–ø: {workflow.get_workflow_type_display()}')
        self.stdout.write(f'–ê–∫—Ç–∏–≤–µ–Ω: {"–î–∞" if workflow.is_active else "–ù–µ—Ç"}')
        self.stdout.write(f'–°–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–µ–π: {signature_count}')

        if signature_count > 0:
            self.stdout.write(
                self.style.WARNING(f'\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω–æ {signature_count} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–µ–π!')
            )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–µ–π
            self.stdout.write('\n–î–µ—Ç–∞–ª–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–µ–π:')
            for signature in related_signatures[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                self.stdout.write(
                    f'  - {signature.get_signature_type_display()} –¥–ª—è '
                    f'{signature.content_type.app_label}.{signature.content_type.model} #{signature.object_id} '
                    f'(—Å—Ç–∞—Ç—É—Å: {signature.get_status_display()})'
                )
            
            if signature_count > 10:
                self.stdout.write(f'  ... –∏ –µ—â–µ {signature_count - 10} –ø–æ–¥–ø–∏—Å–µ–π')

        if dry_run:
            self.stdout.write(
                self.style.SUCCESS('\n‚úÖ –†–µ–∂–∏–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ - –Ω–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–µ–Ω–æ')
            )
            return

        if not force:
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            confirm = input(
                f'\n‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å "{workflow.name}" '
                f'–∏ –≤—Å–µ {signature_count} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–µ–π? (yes/no): '
            )
            
            if confirm.lower() not in ['yes', 'y', '–¥–∞', '–¥']:
                self.stdout.write(
                    self.style.WARNING('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º')
                )
                return

        # –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
        try:
            with transaction.atomic():
                workflow_name = workflow.name
                workflow.delete()
                
                self.stdout.write(
                    self.style.SUCCESS(
                        f'‚úÖ –†–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å "{workflow_name}" –∏ {signature_count} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–µ–π —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã'
                    )
                )
                
        except Exception as e:
            raise CommandError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}')

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        remaining_workflows = SignatureWorkflow.objects.count()
        remaining_signatures = DocumentSignature.objects.count()
        
        self.stdout.write(f'\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:')
        self.stdout.write(f'  - –†–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {remaining_workflows}')
        self.stdout.write(f'  - –ü–æ–¥–ø–∏—Å–µ–π: {remaining_signatures}') 