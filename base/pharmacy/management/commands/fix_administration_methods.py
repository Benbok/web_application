from django.core.management.base import BaseCommand
from django.db import transaction
from pharmacy.models import AdministrationMethod, DosingInstruction


class Command(BaseCommand):
    help = '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–æ—Å–æ–±–æ–≤ –≤–≤–µ–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'

    def add_arguments(self, parser):
        parser.add_argument(
            '--show-only',
            action='store_true',
            help='–¢–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —Å–ø–æ—Å–æ–±—ã –≤–≤–µ–¥–µ–Ω–∏—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
        )
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ –±–µ–∑ –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π',
        )

    def handle(self, *args, **options):
        if options['show_only']:
            self.show_current_methods()
            return
        
        if options['dry_run']:
            self.dry_run_fix()
            return
        
        self.fix_administration_methods()

    def show_current_methods(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ —Å–ø–æ—Å–æ–±—ã –≤–≤–µ–¥–µ–Ω–∏—è –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ."""
        self.stdout.write(self.style.SUCCESS("üìä –¢–ï–ö–£–©–ò–ï –°–ü–û–°–û–ë–´ –í–í–ï–î–ï–ù–ò–Ø:"))
        
        methods = AdministrationMethod.objects.all().order_by('name')
        for method in methods:
            instruction_count = DosingInstruction.objects.filter(route=method).count()
            self.stdout.write(f"   ‚Ä¢ {method.name} ({instruction_count} –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π)")
        
        self.stdout.write(f"\n–í—Å–µ–≥–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤–≤–µ–¥–µ–Ω–∏—è: {methods.count()}")

    def dry_run_fix(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á—Ç–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ –±–µ–∑ –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π."""
        self.stdout.write(self.style.WARNING("üîç –†–ï–ñ–ò–ú –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–û–ì–û –ü–†–û–°–ú–û–¢–†–ê:"))
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –Ω–∞–∑–≤–∞–Ω–∏–π
        method_mapping = {
            "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ (–∏–Ω—Ñ—É–∑–∏—è)": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ",
            "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ, –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ",
            "–í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ",
            "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ",
            "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –ü–µ—Ä–æ—Ä–∞–ª—å–Ω–æ": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –ü–µ—Ä–æ—Ä–∞–ª—å–Ω–æ",
            "–ü–µ—Ä–æ—Ä–∞–ª—å–Ω–æ (–≤–Ω—É—Ç—Ä—å)": "–ü–µ—Ä–æ—Ä–∞–ª—å–Ω–æ",
            "–ú–µ—Å—Ç–Ω–æ (–≤ –∫–æ–Ω—ä—é–Ω–∫—Ç–∏–≤–∞–ª—å–Ω—ã–π –º–µ—à–æ–∫)": "–ú–µ—Å—Ç–Ω–æ",
            "–ù–∞—Ä—É–∂–Ω–æ": "–ù–∞—Ä—É–∂–Ω–æ",
        }
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        changes = []
        for instruction in DosingInstruction.objects.all():
            if instruction.route and instruction.route.name in method_mapping:
                old_name = instruction.route.name
                new_name = method_mapping[old_name]
                changes.append((old_name, new_name))
        
        if changes:
            self.stdout.write("\nüîÑ –ë–£–î–£–¢ –û–ë–ù–û–í–õ–ï–ù–´ –°–õ–ï–î–£–Æ–©–ò–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò:")
            for old_name, new_name in changes:
                self.stdout.write(f"   ‚Ä¢ '{old_name}' ‚Üí '{new_name}'")
            self.stdout.write(f"\n–í—Å–µ–≥–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {len(changes)}")
        else:
            self.stdout.write(self.style.SUCCESS("‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"))

    def fix_administration_methods(self):
        """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–æ—Å–æ–±–æ–≤ –≤–≤–µ–¥–µ–Ω–∏—è."""
        self.stdout.write(self.style.SUCCESS("üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–æ—Å–æ–±–æ–≤ –≤–≤–µ–¥–µ–Ω–∏—è..."))
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –Ω–∞–∑–≤–∞–Ω–∏–π
        method_mapping = {
            # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –≤–≤–µ–¥–µ–Ω–∏—è
            "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ (–∏–Ω—Ñ—É–∑–∏—è)": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ",
            "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ, –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ",
            "–í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ",
            "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –í–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ",
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
            "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –ü–µ—Ä–æ—Ä–∞–ª—å–Ω–æ": "–í–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ –∏–ª–∏ –ü–µ—Ä–æ—Ä–∞–ª—å–Ω–æ",
            "–ü–µ—Ä–æ—Ä–∞–ª—å–Ω–æ (–≤–Ω—É—Ç—Ä—å)": "–ü–µ—Ä–æ—Ä–∞–ª—å–Ω–æ",
            "–ú–µ—Å—Ç–Ω–æ (–≤ –∫–æ–Ω—ä—é–Ω–∫—Ç–∏–≤–∞–ª—å–Ω—ã–π –º–µ—à–æ–∫)": "–ú–µ—Å—Ç–Ω–æ",
            "–ù–∞—Ä—É–∂–Ω–æ": "–ù–∞—Ä—É–∂–Ω–æ",
        }
        
        with transaction.atomic():
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–ø–æ—Å–æ–±—ã –≤–≤–µ–¥–µ–Ω–∏—è
            all_methods = AdministrationMethod.objects.all()
            self.stdout.write(f"üìä –ù–∞–π–¥–µ–Ω–æ {all_methods.count()} —Å–ø–æ—Å–æ–±–æ–≤ –≤–≤–µ–¥–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            
            # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–µ—Ç–æ–¥–æ–≤
            existing_methods = {}
            for method in all_methods:
                existing_methods[method.name] = method
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            new_methods_created = 0
            for old_name, new_name in method_mapping.items():
                if new_name not in existing_methods:
                    method = AdministrationMethod.objects.create(
                        name=new_name,
                        description=f"–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –≤–≤–µ–¥–µ–Ω–∏—è: {new_name}"
                    )
                    existing_methods[new_name] = method
                    new_methods_created += 1
                    self.stdout.write(f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–± –≤–≤–µ–¥–µ–Ω–∏—è: '{new_name}'")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—é
            updated_instructions = 0
            for instruction in DosingInstruction.objects.all():
                if instruction.route and instruction.route.name in method_mapping:
                    old_name = instruction.route.name
                    new_name = method_mapping[old_name]
                    new_method = existing_methods[new_name]
                    
                    instruction.route = new_method
                    instruction.save()
                    updated_instructions += 1
                    self.stdout.write(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: '{old_name}' ‚Üí '{new_name}'")
            
            # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –º–µ—Ç–æ–¥—ã
            deleted_methods = 0
            for old_name in method_mapping.keys():
                if old_name in existing_methods:
                    method = existing_methods[old_name]
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
                    if not DosingInstruction.objects.filter(route=method).exists():
                        method.delete()
                        deleted_methods += 1
                        self.stdout.write(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω –¥—É–±–ª–∏—Ä—É—é—â–∏–π—Å—è —Å–ø–æ—Å–æ–±: '{old_name}'")
                    else:
                        self.stdout.write(self.style.WARNING(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å '{old_name}' - –µ—Å—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"))
            
            # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            self.stdout.write("\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:")
            self.stdout.write(f"   ‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤: {new_methods_created}")
            self.stdout.write(f"   ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: {updated_instructions}")
            self.stdout.write(f"   ‚Ä¢ –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –º–µ—Ç–æ–¥–æ–≤: {deleted_methods}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–≤
            final_methods = AdministrationMethod.objects.all().order_by('name')
            self.stdout.write(f"\nüìã –§–ò–ù–ê–õ–¨–ù–´–ô –°–ü–ò–°–û–ö –°–ü–û–°–û–ë–û–í –í–í–ï–î–ï–ù–ò–Ø ({final_methods.count()}):")
            for method in final_methods:
                instruction_count = DosingInstruction.objects.filter(route=method).count()
                self.stdout.write(f"   ‚Ä¢ {method.name} ({instruction_count} –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π)")
            
            self.stdout.write(self.style.SUCCESS("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")) 