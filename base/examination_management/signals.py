from django.db.models.signals import post_save
from django.dispatch import receiver
from django.contrib.auth import get_user_model
from .models import ExaminationLabTest, ExaminationInstrumental
from clinical_scheduling.services import ClinicalSchedulingService

User = get_user_model()

@receiver(post_save, sender=ExaminationLabTest)
def create_lab_test_schedule(sender, instance, created, **kwargs):
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    """
    print(f"üîÑ –°–ò–ì–ù–ê–õ: ExaminationLabTest —Å–æ—Ö—Ä–∞–Ω–µ–Ω. Created: {created}, Instance: {instance}")
    
    if created:
        try:
            print(f"üÜï –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: {instance}")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
            user = getattr(instance, '_current_user', None)
            if not user:
                try:
                    user = User.objects.filter(is_active=True).first()
                    print(f"üë§ –ò—Å–ø–æ–ª—å–∑—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user}")
                except:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    return
            
            print(f"üìÖ –í—ã–∑—ã–≤–∞—é ClinicalSchedulingService.create_schedule_for_assignment")
            
            # –í–º–µ—Å—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            print(f"‚ÑπÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è {instance}: {e}")
            import traceback
            traceback.print_exc()

@receiver(post_save, sender=ExaminationInstrumental)
def create_instrumental_schedule(sender, instance, created, **kwargs):
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    """
    if created:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
            user = getattr(instance, '_current_user', None)
            if not user:
                try:
                    user = User.objects.filter(is_active=True).first()
                except:
                    return
            
            # –í–º–µ—Å—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            print(f"‚ÑπÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è {instance}: {e}") 