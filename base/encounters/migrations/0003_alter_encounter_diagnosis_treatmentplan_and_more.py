# Generated by Django 5.2.4 on 2025-08-03 19:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('diagnosis', '0001_initial'),
        ('encounters', '0002_encounter_diagnosis'),
        ('pharmacy', '0002_administrationmethod_medicationgroup_releaseform_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='encounter',
            name='diagnosis',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounters', to='diagnosis.diagnosis', verbose_name='Диагноз (устаревшее)'),
        ),
        migrations.CreateModel(
            name='TreatmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Например: 'Основная терапия', 'Симптоматическое лечение'", max_length=200, verbose_name='Название плана лечения')),
                ('description', models.TextField(blank=True, verbose_name='Описание плана лечения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='encounters.encounter', verbose_name='Случай обращения')),
            ],
            options={
                'verbose_name': 'План лечения',
                'verbose_name_plural': 'Планы лечения',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentMedication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_medication', models.CharField(blank=True, help_text='Введите название препарата в свободной форме', max_length=200, verbose_name='Собственный препарат')),
                ('dosage', models.CharField(help_text="Например: '500 мг', '1 таблетка'", max_length=100, verbose_name='Дозировка')),
                ('frequency', models.CharField(help_text="Например: '2 раза в день', 'каждые 8 часов'", max_length=100, verbose_name='Частота приема')),
                ('route', models.CharField(choices=[('oral', 'Перорально'), ('intravenous', 'Внутривенно'), ('intramuscular', 'Внутримышечно'), ('subcutaneous', 'Подкожно'), ('topical', 'Наружно'), ('inhalation', 'Ингаляционно'), ('rectal', 'Ректально'), ('other', 'Другое')], default='oral', max_length=20, verbose_name='Способ применения')),
                ('duration', models.CharField(blank=True, help_text="Например: '7 дней', 'до улучшения'", max_length=100, verbose_name='Длительность курса')),
                ('instructions', models.TextField(blank=True, help_text='Дополнительные инструкции по применению', verbose_name='Особые указания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treatment_medications', to='pharmacy.medication', verbose_name='Препарат из справочника')),
                ('treatment_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='encounters.treatmentplan', verbose_name='План лечения')),
            ],
            options={
                'verbose_name': 'Лекарство в плане лечения',
                'verbose_name_plural': 'Лекарства в плане лечения',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='EncounterDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis_type', models.CharField(choices=[('main', 'Основной диагноз'), ('complication', 'Осложнение'), ('comorbidity', 'Сопутствующий диагноз')], default='main', max_length=20, verbose_name='Тип диагноза')),
                ('custom_diagnosis', models.TextField(blank=True, help_text='Введите диагноз в свободной форме', verbose_name='Собственный диагноз')),
                ('description', models.TextField(blank=True, help_text='Дополнительное описание диагноза', verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagnosis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='encounter_diagnoses', to='diagnosis.diagnosis', verbose_name='Диагноз из справочника')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='encounters.encounter', verbose_name='Случай обращения')),
            ],
            options={
                'verbose_name': 'Диагноз случая',
                'verbose_name_plural': 'Диагнозы случая',
                'ordering': ['diagnosis_type', 'created_at'],
                'unique_together': {('encounter', 'diagnosis_type', 'custom_diagnosis'), ('encounter', 'diagnosis_type', 'diagnosis')},
            },
        ),
    ]
