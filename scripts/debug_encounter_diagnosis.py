#!/usr/bin/env python
import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É Django
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'base'))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'base.settings')
django.setup()

from encounters.models import Encounter, EncounterDiagnosis
from encounters.forms import EncounterDiagnosisAdvancedForm
from diagnosis.models import Diagnosis

def test_encounter_diagnosis_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ EncounterDiagnosis"""
    print("=== –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø ENCOUNTER DIAGNOSIS ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–ª—É—á–∞–π –æ–±—Ä–∞—â–µ–Ω–∏—è
    try:
        encounter = Encounter.objects.first()
        if not encounter:
            print("‚ùå –ù–µ—Ç —Å–ª—É—á–∞–µ–≤ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å–ª—É—á–∞–π –æ–±—Ä–∞—â–µ–Ω–∏—è: {encounter}")
        print(f"   ID: {encounter.pk}")
        print(f"   –ü–∞—Ü–∏–µ–Ω—Ç: {encounter.patient}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–∏–∞–≥–Ω–æ–∑ –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
        diagnosis = Diagnosis.objects.first()
        if not diagnosis:
            print("‚ùå –ù–µ—Ç –¥–∏–∞–≥–Ω–æ–∑–æ–≤ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –¥–∏–∞–≥–Ω–æ–∑: {diagnosis}")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã
        form_data = {
            'diagnosis_type': 'main',
            'diagnosis': diagnosis.pk,
            'custom_diagnosis': '',
            'description': '–¢–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–≥–Ω–æ–∑'
        }
        
        print(f"üìù –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã: {form_data}")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É
        form = EncounterDiagnosisAdvancedForm(data=form_data)
        
        if form.is_valid():
            print("‚úÖ –§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞")
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç EncounterDiagnosis
            encounter_diagnosis = form.save(commit=False)
            encounter_diagnosis.encounter = encounter
            encounter_diagnosis.save()
            
            print(f"‚úÖ EncounterDiagnosis —Å–æ–∑–¥–∞–Ω: {encounter_diagnosis}")
            print(f"   Encounter: {encounter_diagnosis.encounter}")
            print(f"   Diagnosis: {encounter_diagnosis.diagnosis}")
            print(f"   Type: {encounter_diagnosis.diagnosis_type}")
            
        else:
            print("‚ùå –§–æ—Ä–º–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞:")
            for field, errors in form.errors.items():
                print(f"   {field}: {errors}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def test_encounter_diagnosis_without_encounter():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ EncounterDiagnosis –±–µ–∑ encounter"""
    print("\n=== –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ë–ï–ó ENCOUNTER ===")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–∏–∞–≥–Ω–æ–∑ –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
        diagnosis = Diagnosis.objects.first()
        if not diagnosis:
            print("‚ùå –ù–µ—Ç –¥–∏–∞–≥–Ω–æ–∑–æ–≤ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ")
            return
        
        # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã
        form_data = {
            'diagnosis_type': 'main',
            'diagnosis': diagnosis.pk,
            'custom_diagnosis': '',
            'description': '–¢–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–≥–Ω–æ–∑'
        }
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É
        form = EncounterDiagnosisAdvancedForm(data=form_data)
        
        if form.is_valid():
            print("‚úÖ –§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞")
            
            # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –±–µ–∑ encounter
            encounter_diagnosis = form.save(commit=False)
            # –ù–ï —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º encounter
            encounter_diagnosis.save()
            
            print(f"‚úÖ EncounterDiagnosis —Å–æ–∑–¥–∞–Ω: {encounter_diagnosis}")
            print(f"   Encounter: {encounter_diagnosis.encounter}")
            
        else:
            print("‚ùå –§–æ—Ä–º–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞:")
            for field, errors in form.errors.items():
                print(f"   {field}: {errors}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_encounter_diagnosis_creation()
    test_encounter_diagnosis_without_encounter() 